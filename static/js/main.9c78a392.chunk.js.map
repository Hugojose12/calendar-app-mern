{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchNotToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","startLogout","dispatch","clear","logout","checkingFinish","login","user","register","LoginScreen","useDispatch","lEmail","lPassword","formValues","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","Swal","fire","msg","uid","placeholder","onChange","console","log","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c78a392.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n    authChecking: '[auth] Checking login state',\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister : '[auth] Start Register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authlogout: '[auth] Logout',\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from \"../types/types\";\n\n const initialState = {\n   checking: true\n }\n\n export const authReducer = ( state = initialState, action ) => {\n    switch (action.type) {\n\n      case types.authLogin:\n         return {\n            ...state,\n            ...action.payload,\n            checking: false\n         }\n      \n      case types.authStartRegister:\n         return {\n            ...state,\n            ...action.payload,\n            checking: false\n         }\n      \n      case types.authCheckingFinish:\n         return{\n            ...state,\n            checking: false\n         }\n      \n      case types.authlogout:\n         return{\n            checking: false\n         }\n    \n      default:\n         return state;\n    }\n }","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n    \n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL\n\nexport const fetchNotToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${endpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url);\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport const fetchToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${endpoint}`;\n    const token = localStorage.getItem('token-auth') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}","import moment from 'moment'\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import { types } from \"../types/types\";\nimport { fetchToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n        \n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchToken('events', event, 'POST');\n            const body = await resp.json();\n\n            if(body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew(event));\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.events)\n            console.log(events)\n            dispatch( eventLoaded(events))\n\n            console.log(body)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });\n\n\n","import { fetchNotToken, fetchToken } from \"../helpers/fetch\"\nimport { types } from \"../types/types\";\nimport Swal from \"sweetalert2\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin = ( email, password) => {\n    return async(dispatch) => {\n        \n        const resp = await fetchNotToken('auth', {email, password}, 'POST')\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem('token-auth', body.token);\n            localStorage.setItem('token-start', new Date().getTime());\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n        dispatch( login({\n            uid: body.uid,\n            name: body.name\n        }))\n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async (dispatch) => {\n        const resp = await fetchNotToken('auth/new', { name, email, password }, 'POST')\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem('token-auth', body.token);\n            localStorage.setItem('token-start', new Date().getTime());\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n        dispatch( register({\n            uid: body.uid,\n            name: body.name\n        }))\n    }\n}\n\nexport const startChecking= () => {\n    return async (dispatch) => {\n        const resp = await fetchToken('auth/renew')\n        const body = await resp.json();\n\n        if(body.ok) {\n            localStorage.setItem('token-auth', body.token);\n            localStorage.setItem('token-start', new Date().getTime());\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }))\n\n        } else {\n            dispatch(checkingFinish());\n        }\n\n        \n    }\n}\n\nexport const startLogout = () => {\n    return(dispatch) => {\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch(logout());\n    }\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst register = ( user ) => ({\n    type: types.authStartRegister,\n    payload: user\n})\n\nconst logout = () => ({\n    type: types.authlogout\n})","import React from 'react';\nimport './login.css';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const LoginScreen = () => {\n    \n    const dispatch = useDispatch()\n\n    const [ formValues, handleInputChange ] = useForm( {\n        lEmail: 'hugo@gmail.com',\n        lPassword: '123456'\n    });\n\n    const {lEmail, lPassword} = formValues\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        dispatch(startLogin(lEmail, lPassword)); \n    }\n\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( {\n        rName: 'Hugo Rivero',\n        rEmail: 'hugo@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n\n\n    });\n\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        console.log(formRegisterValues)\n\n        if (rPassword1 !== rPassword2){\n            return Swal.fire('Error','Passwords do not match', 'error');\n        }\n\n        dispatch(startRegister(rEmail, rPassword1, rName)); \n    }\n    \n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}> \n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Name\"\n                                name= \"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Email\"\n                                name= \"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                name= \"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange} \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repeat Password\" \n                                name= \"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Create Account\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch()\n    const {name} = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew( formValues ) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Delete event </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n        \n        const style = {\n            backgroundColor: (  uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( !isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/\" /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n    const { uid } = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch(startChecking())\n    }, [dispatch])\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={!!uid}\n                    />      \n                    <PrivateRoute\n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen }\n                        isAuthenticated={!!uid} \n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nconsole.log(process.env.REACT_APP_API_URL)\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}